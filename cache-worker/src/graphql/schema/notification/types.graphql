type Notification {
  id: Int!
  unread: Boolean!
  event: AbstractNotificationEvent!
}

interface AbstractNotificationEvent {
  id: Int!
  instance: Instance!
  date: DateTime!
  actor: User!
}

extend type Query {
  notifications(
    after: String
    before: String
    first: Int
    last: Int
    unread: Boolean
  ): NotificationConnection!
  notificationEvent(id: Int!): AbstractNotificationEvent
}

extend type Mutation {
  setNotificationState(id: Int!, unread: Boolean!): Boolean
}

type NotificationConnection {
  edges: [NotificationEdge!]!
  nodes: [Notification!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type NotificationEdge {
  cursor: String!
  node: Notification!
}
